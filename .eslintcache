[{"/Users/admin/hanh_nguyen/src/component/Login.tsx":"1","/Users/admin/hanh_nguyen/src/component/Todo.tsx":"2","/Users/admin/hanh_nguyen/src/index.tsx":"3","/Users/admin/hanh_nguyen/src/App.tsx":"4","/Users/admin/hanh_nguyen/src/service/model/account.tsx":"5"},{"size":1990,"mtime":1609905672691,"results":"6","hashOfConfig":"7"},{"size":9944,"mtime":1609922971151,"results":"8","hashOfConfig":"7"},{"size":219,"mtime":1609416801861,"results":"9","hashOfConfig":"7"},{"size":811,"mtime":1609766683196,"results":"10","hashOfConfig":"7"},{"size":475,"mtime":1609430491036,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d6243b",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/hanh_nguyen/src/component/Login.tsx",[],"/Users/admin/hanh_nguyen/src/component/Todo.tsx",["23"],"/Users/admin/hanh_nguyen/src/index.tsx",[],"/Users/admin/hanh_nguyen/src/App.tsx",[],["24","25"],"/Users/admin/hanh_nguyen/src/service/model/account.tsx",[],{"ruleId":"26","severity":1,"message":"27","line":22,"column":20,"nodeType":"28","endLine":22,"endColumn":54},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},"react-hooks/exhaustive-deps","Assignments to the 'interval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-global-assign","no-unsafe-negation"]